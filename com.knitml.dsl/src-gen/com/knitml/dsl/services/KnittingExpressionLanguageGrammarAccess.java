/*
* generated by Xtext
*/

package com.knitml.dsl.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;


@Singleton
public class KnittingExpressionLanguageGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class PatternElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Pattern");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cLFTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cElementsAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cElementsBlockOperationParserRuleCall_1_0 = (RuleCall)cElementsAssignment_1.eContents().get(0);
		private final RuleCall cLFTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//Pattern:
		//	LF* elements+=BlockOperation+ LF*;
		public ParserRule getRule() { return rule; }

		//LF* elements+=BlockOperation+ LF*
		public Group getGroup() { return cGroup; }

		//LF*
		public RuleCall getLFTerminalRuleCall_0() { return cLFTerminalRuleCall_0; }

		//elements+=BlockOperation+
		public Assignment getElementsAssignment_1() { return cElementsAssignment_1; }

		//BlockOperation
		public RuleCall getElementsBlockOperationParserRuleCall_1_0() { return cElementsBlockOperationParserRuleCall_1_0; }

		//LF*
		public RuleCall getLFTerminalRuleCall_2() { return cLFTerminalRuleCall_2; }
	}

	public class BlockOperationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "BlockOperation");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cInstructionParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cRowParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cMessageParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//BlockOperation:
		//	Instruction | Row | Message;
		public ParserRule getRule() { return rule; }

		//Instruction | Row | Message
		public Alternatives getAlternatives() { return cAlternatives; }

		//Instruction
		public RuleCall getInstructionParserRuleCall_0() { return cInstructionParserRuleCall_0; }

		//Row
		public RuleCall getRowParserRuleCall_1() { return cRowParserRuleCall_1; }

		//Message
		public RuleCall getMessageParserRuleCall_2() { return cMessageParserRuleCall_2; }
	}

	public class InstructionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Instruction");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cInstructionKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cLabelAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cLabelIDTerminalRuleCall_1_0 = (RuleCall)cLabelAssignment_1.eContents().get(0);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Group cGroup_2_0 = (Group)cAlternatives_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2_0_0 = (Keyword)cGroup_2_0.eContents().get(0);
		private final RuleCall cLFTerminalRuleCall_2_0_1 = (RuleCall)cGroup_2_0.eContents().get(1);
		private final Assignment cRowsAssignment_2_0_2 = (Assignment)cGroup_2_0.eContents().get(2);
		private final RuleCall cRowsRowParserRuleCall_2_0_2_0 = (RuleCall)cRowsAssignment_2_0_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_2_0_3 = (Keyword)cGroup_2_0.eContents().get(3);
		private final RuleCall cLFTerminalRuleCall_2_0_4 = (RuleCall)cGroup_2_0.eContents().get(4);
		private final Group cGroup_2_1 = (Group)cAlternatives_2.eContents().get(1);
		private final Keyword cColonKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final RuleCall cLFTerminalRuleCall_2_1_1 = (RuleCall)cGroup_2_1.eContents().get(1);
		private final Assignment cRowsAssignment_2_1_2 = (Assignment)cGroup_2_1.eContents().get(2);
		private final RuleCall cRowsRowParserRuleCall_2_1_2_0 = (RuleCall)cRowsAssignment_2_1_2.eContents().get(0);
		private final RuleCall cLFTerminalRuleCall_2_1_3 = (RuleCall)cGroup_2_1.eContents().get(3);
		
		//Instruction:
		//	"Instruction" label=ID? ("{" LF* rows+=Row+ "}" LF | ":" LF rows+=Row+ LF);
		public ParserRule getRule() { return rule; }

		//"Instruction" label=ID? ("{" LF* rows+=Row+ "}" LF | ":" LF rows+=Row+ LF)
		public Group getGroup() { return cGroup; }

		//"Instruction"
		public Keyword getInstructionKeyword_0() { return cInstructionKeyword_0; }

		//label=ID?
		public Assignment getLabelAssignment_1() { return cLabelAssignment_1; }

		//ID
		public RuleCall getLabelIDTerminalRuleCall_1_0() { return cLabelIDTerminalRuleCall_1_0; }

		//"{" LF* rows+=Row+ "}" LF | ":" LF rows+=Row+ LF
		public Alternatives getAlternatives_2() { return cAlternatives_2; }

		//"{" LF* rows+=Row+ "}" LF
		public Group getGroup_2_0() { return cGroup_2_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2_0_0() { return cLeftCurlyBracketKeyword_2_0_0; }

		//LF*
		public RuleCall getLFTerminalRuleCall_2_0_1() { return cLFTerminalRuleCall_2_0_1; }

		//rows+=Row+
		public Assignment getRowsAssignment_2_0_2() { return cRowsAssignment_2_0_2; }

		//Row
		public RuleCall getRowsRowParserRuleCall_2_0_2_0() { return cRowsRowParserRuleCall_2_0_2_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_2_0_3() { return cRightCurlyBracketKeyword_2_0_3; }

		//LF
		public RuleCall getLFTerminalRuleCall_2_0_4() { return cLFTerminalRuleCall_2_0_4; }

		//":" LF rows+=Row+ LF
		public Group getGroup_2_1() { return cGroup_2_1; }

		//":"
		public Keyword getColonKeyword_2_1_0() { return cColonKeyword_2_1_0; }

		//LF
		public RuleCall getLFTerminalRuleCall_2_1_1() { return cLFTerminalRuleCall_2_1_1; }

		//rows+=Row+
		public Assignment getRowsAssignment_2_1_2() { return cRowsAssignment_2_1_2; }

		//Row
		public RuleCall getRowsRowParserRuleCall_2_1_2_0() { return cRowsRowParserRuleCall_2_1_2_0; }

		//LF
		public RuleCall getLFTerminalRuleCall_2_1_3() { return cLFTerminalRuleCall_2_1_3; }
	}

	public class RowElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Row");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNextRowAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cNextRowNextKeyword_0_0 = (Keyword)cNextRowAssignment_0.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_1 = (UnorderedGroup)cGroup.eContents().get(1);
		private final Assignment cShortRowAssignment_1_0 = (Assignment)cUnorderedGroup_1.eContents().get(0);
		private final Keyword cShortRowShortKeyword_1_0_0 = (Keyword)cShortRowAssignment_1_0.eContents().get(0);
		private final Assignment cLongRowAssignment_1_1 = (Assignment)cUnorderedGroup_1.eContents().get(1);
		private final Keyword cLongRowLongKeyword_1_1_0 = (Keyword)cLongRowAssignment_1_1.eContents().get(0);
		private final Assignment cLabelAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Alternatives cLabelAlternatives_2_0 = (Alternatives)cLabelAssignment_2.eContents().get(0);
		private final Keyword cLabelRowKeyword_2_0_0 = (Keyword)cLabelAlternatives_2_0.eContents().get(0);
		private final Keyword cLabelRoundKeyword_2_0_1 = (Keyword)cLabelAlternatives_2_0.eContents().get(1);
		private final Keyword cLabelRowsKeyword_2_0_2 = (Keyword)cLabelAlternatives_2_0.eContents().get(2);
		private final Keyword cLabelRoundsKeyword_2_0_3 = (Keyword)cLabelAlternatives_2_0.eContents().get(3);
		private final Alternatives cAlternatives_3 = (Alternatives)cGroup.eContents().get(3);
		private final Assignment cRangeAssignment_3_0 = (Assignment)cAlternatives_3.eContents().get(0);
		private final RuleCall cRangeRangeParserRuleCall_3_0_0 = (RuleCall)cRangeAssignment_3_0.eContents().get(0);
		private final Group cGroup_3_1 = (Group)cAlternatives_3.eContents().get(1);
		private final Assignment cNumberAssignment_3_1_0 = (Assignment)cGroup_3_1.eContents().get(0);
		private final RuleCall cNumberINTTerminalRuleCall_3_1_0_0 = (RuleCall)cNumberAssignment_3_1_0.eContents().get(0);
		private final Group cGroup_3_1_1 = (Group)cGroup_3_1.eContents().get(1);
		private final Keyword cCommaKeyword_3_1_1_0 = (Keyword)cGroup_3_1_1.eContents().get(0);
		private final Assignment cNumberAssignment_3_1_1_1 = (Assignment)cGroup_3_1_1.eContents().get(1);
		private final RuleCall cNumberINTTerminalRuleCall_3_1_1_1_0 = (RuleCall)cNumberAssignment_3_1_1_1.eContents().get(0);
		private final Group cGroup_3_1_2 = (Group)cGroup_3_1.eContents().get(2);
		private final Keyword cAndKeyword_3_1_2_0 = (Keyword)cGroup_3_1_2.eContents().get(0);
		private final Keyword cAllKeyword_3_1_2_1 = (Keyword)cGroup_3_1_2.eContents().get(1);
		private final Assignment cSubsequentAssignment_3_1_2_2 = (Assignment)cGroup_3_1_2.eContents().get(2);
		private final Alternatives cSubsequentAlternatives_3_1_2_2_0 = (Alternatives)cSubsequentAssignment_3_1_2_2.eContents().get(0);
		private final Keyword cSubsequentEvenKeyword_3_1_2_2_0_0 = (Keyword)cSubsequentAlternatives_3_1_2_2_0.eContents().get(0);
		private final Keyword cSubsequentOddKeyword_3_1_2_2_0_1 = (Keyword)cSubsequentAlternatives_3_1_2_2_0.eContents().get(1);
		private final Alternatives cAlternatives_3_1_2_3 = (Alternatives)cGroup_3_1_2.eContents().get(3);
		private final Keyword cRowsKeyword_3_1_2_3_0 = (Keyword)cAlternatives_3_1_2_3.eContents().get(0);
		private final Keyword cRoundsKeyword_3_1_2_3_1 = (Keyword)cAlternatives_3_1_2_3.eContents().get(1);
		private final UnorderedGroup cUnorderedGroup_4 = (UnorderedGroup)cGroup.eContents().get(4);
		private final Assignment cSideAssignment_4_0 = (Assignment)cUnorderedGroup_4.eContents().get(0);
		private final Alternatives cSideAlternatives_4_0_0 = (Alternatives)cSideAssignment_4_0.eContents().get(0);
		private final Keyword cSideWSKeyword_4_0_0_0 = (Keyword)cSideAlternatives_4_0_0.eContents().get(0);
		private final Keyword cSideRSKeyword_4_0_0_1 = (Keyword)cSideAlternatives_4_0_0.eContents().get(1);
		private final Group cGroup_4_1 = (Group)cUnorderedGroup_4.eContents().get(1);
		private final Keyword cWithKeyword_4_1_0 = (Keyword)cGroup_4_1.eContents().get(0);
		private final Assignment cYarnRefAssignment_4_1_1 = (Assignment)cGroup_4_1.eContents().get(1);
		private final RuleCall cYarnRefIDTerminalRuleCall_4_1_1_0 = (RuleCall)cYarnRefAssignment_4_1_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cLeftParenthesisKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Group cGroup_5_1 = (Group)cGroup_5.eContents().get(1);
		private final Keyword cCommaKeyword_5_1_0 = (Keyword)cGroup_5_1.eContents().get(0);
		private final Assignment cInformAssignment_5_1_1 = (Assignment)cGroup_5_1.eContents().get(1);
		private final Keyword cInformInformKeyword_5_1_1_0 = (Keyword)cInformAssignment_5_1_1.eContents().get(0);
		private final Keyword cSideKeyword_5_1_2 = (Keyword)cGroup_5_1.eContents().get(2);
		private final Group cGroup_5_2 = (Group)cGroup_5.eContents().get(2);
		private final Keyword cCommaKeyword_5_2_0 = (Keyword)cGroup_5_2.eContents().get(0);
		private final Assignment cResetAssignment_5_2_1 = (Assignment)cGroup_5_2.eContents().get(1);
		private final Keyword cResetResetKeyword_5_2_1_0 = (Keyword)cResetAssignment_5_2_1.eContents().get(0);
		private final Keyword cCountKeyword_5_2_2 = (Keyword)cGroup_5_2.eContents().get(2);
		private final Keyword cRightParenthesisKeyword_5_3 = (Keyword)cGroup_5.eContents().get(3);
		private final Keyword cColonKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final RuleCall cLFTerminalRuleCall_7 = (RuleCall)cGroup.eContents().get(7);
		private final Assignment cOperationsAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cOperationsInlineOperationParserRuleCall_8_0 = (RuleCall)cOperationsAssignment_8.eContents().get(0);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cCommaKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Assignment cOperationsAssignment_9_1 = (Assignment)cGroup_9.eContents().get(1);
		private final RuleCall cOperationsInlineOperationParserRuleCall_9_1_0 = (RuleCall)cOperationsAssignment_9_1.eContents().get(0);
		private final RuleCall cLFTerminalRuleCall_10 = (RuleCall)cGroup.eContents().get(10);
		
		//Row:
		//	nextRow?="Next"? (shortRow?="Short"? & longRow?="Long"?) label=("Row" | "Round" | "Rows" | "Rounds") (range=Range |
		//	number+=INT ("," number+=INT)* ("and" "all"? subsequent=("even" | "odd") ("rows" | "rounds")?)?)? (side=("WS" | "RS")?
		//	& ("with" yarnRef=ID)?) ("(" (","? inform?="inform" "side"?)? (","? reset?="reset" "count"?)? ")")? ":" LF?
		//	operations+=InlineOperation ("," operations+=InlineOperation)* => LF?;
		public ParserRule getRule() { return rule; }

		//nextRow?="Next"? (shortRow?="Short"? & longRow?="Long"?) label=("Row" | "Round" | "Rows" | "Rounds") (range=Range |
		//number+=INT ("," number+=INT)* ("and" "all"? subsequent=("even" | "odd") ("rows" | "rounds")?)?)? (side=("WS" | "RS")?
		//& ("with" yarnRef=ID)?) ("(" (","? inform?="inform" "side"?)? (","? reset?="reset" "count"?)? ")")? ":" LF?
		//operations+=InlineOperation ("," operations+=InlineOperation)* => LF?
		public Group getGroup() { return cGroup; }

		//nextRow?="Next"?
		public Assignment getNextRowAssignment_0() { return cNextRowAssignment_0; }

		//"Next"
		public Keyword getNextRowNextKeyword_0_0() { return cNextRowNextKeyword_0_0; }

		//shortRow?="Short"? & longRow?="Long"?
		public UnorderedGroup getUnorderedGroup_1() { return cUnorderedGroup_1; }

		//shortRow?="Short"?
		public Assignment getShortRowAssignment_1_0() { return cShortRowAssignment_1_0; }

		//"Short"
		public Keyword getShortRowShortKeyword_1_0_0() { return cShortRowShortKeyword_1_0_0; }

		//longRow?="Long"?
		public Assignment getLongRowAssignment_1_1() { return cLongRowAssignment_1_1; }

		//"Long"
		public Keyword getLongRowLongKeyword_1_1_0() { return cLongRowLongKeyword_1_1_0; }

		//label=("Row" | "Round" | "Rows" | "Rounds")
		public Assignment getLabelAssignment_2() { return cLabelAssignment_2; }

		//"Row" | "Round" | "Rows" | "Rounds"
		public Alternatives getLabelAlternatives_2_0() { return cLabelAlternatives_2_0; }

		//"Row"
		public Keyword getLabelRowKeyword_2_0_0() { return cLabelRowKeyword_2_0_0; }

		//"Round"
		public Keyword getLabelRoundKeyword_2_0_1() { return cLabelRoundKeyword_2_0_1; }

		//"Rows"
		public Keyword getLabelRowsKeyword_2_0_2() { return cLabelRowsKeyword_2_0_2; }

		//"Rounds"
		public Keyword getLabelRoundsKeyword_2_0_3() { return cLabelRoundsKeyword_2_0_3; }

		//(range=Range | number+=INT ("," number+=INT)* ("and" "all"? subsequent=("even" | "odd") ("rows" | "rounds")?)?)?
		public Alternatives getAlternatives_3() { return cAlternatives_3; }

		//range=Range
		public Assignment getRangeAssignment_3_0() { return cRangeAssignment_3_0; }

		//Range
		public RuleCall getRangeRangeParserRuleCall_3_0_0() { return cRangeRangeParserRuleCall_3_0_0; }

		//number+=INT ("," number+=INT)* ("and" "all"? subsequent=("even" | "odd") ("rows" | "rounds")?)?
		public Group getGroup_3_1() { return cGroup_3_1; }

		//number+=INT
		public Assignment getNumberAssignment_3_1_0() { return cNumberAssignment_3_1_0; }

		//INT
		public RuleCall getNumberINTTerminalRuleCall_3_1_0_0() { return cNumberINTTerminalRuleCall_3_1_0_0; }

		//("," number+=INT)*
		public Group getGroup_3_1_1() { return cGroup_3_1_1; }

		//","
		public Keyword getCommaKeyword_3_1_1_0() { return cCommaKeyword_3_1_1_0; }

		//number+=INT
		public Assignment getNumberAssignment_3_1_1_1() { return cNumberAssignment_3_1_1_1; }

		//INT
		public RuleCall getNumberINTTerminalRuleCall_3_1_1_1_0() { return cNumberINTTerminalRuleCall_3_1_1_1_0; }

		//("and" "all"? subsequent=("even" | "odd") ("rows" | "rounds")?)?
		public Group getGroup_3_1_2() { return cGroup_3_1_2; }

		//"and"
		public Keyword getAndKeyword_3_1_2_0() { return cAndKeyword_3_1_2_0; }

		//"all"?
		public Keyword getAllKeyword_3_1_2_1() { return cAllKeyword_3_1_2_1; }

		//subsequent=("even" | "odd")
		public Assignment getSubsequentAssignment_3_1_2_2() { return cSubsequentAssignment_3_1_2_2; }

		//"even" | "odd"
		public Alternatives getSubsequentAlternatives_3_1_2_2_0() { return cSubsequentAlternatives_3_1_2_2_0; }

		//"even"
		public Keyword getSubsequentEvenKeyword_3_1_2_2_0_0() { return cSubsequentEvenKeyword_3_1_2_2_0_0; }

		//"odd"
		public Keyword getSubsequentOddKeyword_3_1_2_2_0_1() { return cSubsequentOddKeyword_3_1_2_2_0_1; }

		//("rows" | "rounds")?
		public Alternatives getAlternatives_3_1_2_3() { return cAlternatives_3_1_2_3; }

		//"rows"
		public Keyword getRowsKeyword_3_1_2_3_0() { return cRowsKeyword_3_1_2_3_0; }

		//"rounds"
		public Keyword getRoundsKeyword_3_1_2_3_1() { return cRoundsKeyword_3_1_2_3_1; }

		//side=("WS" | "RS")? & ("with" yarnRef=ID)?
		public UnorderedGroup getUnorderedGroup_4() { return cUnorderedGroup_4; }

		//side=("WS" | "RS")?
		public Assignment getSideAssignment_4_0() { return cSideAssignment_4_0; }

		//"WS" | "RS"
		public Alternatives getSideAlternatives_4_0_0() { return cSideAlternatives_4_0_0; }

		//"WS"
		public Keyword getSideWSKeyword_4_0_0_0() { return cSideWSKeyword_4_0_0_0; }

		//"RS"
		public Keyword getSideRSKeyword_4_0_0_1() { return cSideRSKeyword_4_0_0_1; }

		//("with" yarnRef=ID)?
		public Group getGroup_4_1() { return cGroup_4_1; }

		//"with"
		public Keyword getWithKeyword_4_1_0() { return cWithKeyword_4_1_0; }

		//yarnRef=ID
		public Assignment getYarnRefAssignment_4_1_1() { return cYarnRefAssignment_4_1_1; }

		//ID
		public RuleCall getYarnRefIDTerminalRuleCall_4_1_1_0() { return cYarnRefIDTerminalRuleCall_4_1_1_0; }

		//("(" (","? inform?="inform" "side"?)? (","? reset?="reset" "count"?)? ")")?
		public Group getGroup_5() { return cGroup_5; }

		//"("
		public Keyword getLeftParenthesisKeyword_5_0() { return cLeftParenthesisKeyword_5_0; }

		//(","? inform?="inform" "side"?)?
		public Group getGroup_5_1() { return cGroup_5_1; }

		//","?
		public Keyword getCommaKeyword_5_1_0() { return cCommaKeyword_5_1_0; }

		//inform?="inform"
		public Assignment getInformAssignment_5_1_1() { return cInformAssignment_5_1_1; }

		//"inform"
		public Keyword getInformInformKeyword_5_1_1_0() { return cInformInformKeyword_5_1_1_0; }

		//"side"?
		public Keyword getSideKeyword_5_1_2() { return cSideKeyword_5_1_2; }

		//(","? reset?="reset" "count"?)?
		public Group getGroup_5_2() { return cGroup_5_2; }

		//","?
		public Keyword getCommaKeyword_5_2_0() { return cCommaKeyword_5_2_0; }

		//reset?="reset"
		public Assignment getResetAssignment_5_2_1() { return cResetAssignment_5_2_1; }

		//"reset"
		public Keyword getResetResetKeyword_5_2_1_0() { return cResetResetKeyword_5_2_1_0; }

		//"count"?
		public Keyword getCountKeyword_5_2_2() { return cCountKeyword_5_2_2; }

		//")"
		public Keyword getRightParenthesisKeyword_5_3() { return cRightParenthesisKeyword_5_3; }

		//":"
		public Keyword getColonKeyword_6() { return cColonKeyword_6; }

		//LF?
		public RuleCall getLFTerminalRuleCall_7() { return cLFTerminalRuleCall_7; }

		//operations+=InlineOperation
		public Assignment getOperationsAssignment_8() { return cOperationsAssignment_8; }

		//InlineOperation
		public RuleCall getOperationsInlineOperationParserRuleCall_8_0() { return cOperationsInlineOperationParserRuleCall_8_0; }

		//("," operations+=InlineOperation)*
		public Group getGroup_9() { return cGroup_9; }

		//","
		public Keyword getCommaKeyword_9_0() { return cCommaKeyword_9_0; }

		//operations+=InlineOperation
		public Assignment getOperationsAssignment_9_1() { return cOperationsAssignment_9_1; }

		//InlineOperation
		public RuleCall getOperationsInlineOperationParserRuleCall_9_1_0() { return cOperationsInlineOperationParserRuleCall_9_1_0; }

		//=> LF?
		public RuleCall getLFTerminalRuleCall_10() { return cLFTerminalRuleCall_10; }
	}

	public class MessageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Message");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cMessageAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cMessageSTRINGTerminalRuleCall_0_0 = (RuleCall)cMessageAssignment_0.eContents().get(0);
		private final RuleCall cLFTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//Message:
		//	message=STRING LF;
		public ParserRule getRule() { return rule; }

		//message=STRING LF
		public Group getGroup() { return cGroup; }

		//message=STRING
		public Assignment getMessageAssignment_0() { return cMessageAssignment_0; }

		//STRING
		public RuleCall getMessageSTRINGTerminalRuleCall_0_0() { return cMessageSTRINGTerminalRuleCall_0_0; }

		//LF
		public RuleCall getLFTerminalRuleCall_1() { return cLFTerminalRuleCall_1; }
	}

	public class InlineOperationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "InlineOperation");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cKnitParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cPurlParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cSlipParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cRepeatParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		
		//// Inline Operations
		//InlineOperation:
		//	Knit | Purl | Slip | Repeat;
		public ParserRule getRule() { return rule; }

		//Knit | Purl | Slip | Repeat
		public Alternatives getAlternatives() { return cAlternatives; }

		//Knit
		public RuleCall getKnitParserRuleCall_0() { return cKnitParserRuleCall_0; }

		//Purl
		public RuleCall getPurlParserRuleCall_1() { return cPurlParserRuleCall_1; }

		//Slip
		public RuleCall getSlipParserRuleCall_2() { return cSlipParserRuleCall_2; }

		//Repeat
		public RuleCall getRepeatParserRuleCall_3() { return cRepeatParserRuleCall_3; }
	}

	public class KnitElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Knit");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Alternatives cAlternatives_0 = (Alternatives)cGroup.eContents().get(0);
		private final Keyword cKKeyword_0_0 = (Keyword)cAlternatives_0.eContents().get(0);
		private final Keyword cKKeyword_0_1 = (Keyword)cAlternatives_0.eContents().get(1);
		private final Keyword cKnitKeyword_0_2 = (Keyword)cAlternatives_0.eContents().get(2);
		private final Keyword cKnitKeyword_0_3 = (Keyword)cAlternatives_0.eContents().get(3);
		private final Action cKnitAction_1 = (Action)cGroup.eContents().get(1);
		private final Assignment cNumberAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNumberINTTerminalRuleCall_2_0 = (RuleCall)cNumberAssignment_2.eContents().get(0);
		private final Alternatives cAlternatives_3 = (Alternatives)cGroup.eContents().get(3);
		private final Keyword cStKeyword_3_0 = (Keyword)cAlternatives_3.eContents().get(0);
		private final Keyword cStsKeyword_3_1 = (Keyword)cAlternatives_3.eContents().get(1);
		private final UnorderedGroup cUnorderedGroup_4 = (UnorderedGroup)cGroup.eContents().get(4);
		private final Assignment cTogetherAssignment_4_0 = (Assignment)cUnorderedGroup_4.eContents().get(0);
		private final Keyword cTogetherTogKeyword_4_0_0 = (Keyword)cTogetherAssignment_4_0.eContents().get(0);
		private final Assignment cThroughTrailingLoopAssignment_4_1 = (Assignment)cUnorderedGroup_4.eContents().get(1);
		private final Alternatives cThroughTrailingLoopAlternatives_4_1_0 = (Alternatives)cThroughTrailingLoopAssignment_4_1.eContents().get(0);
		private final Keyword cThroughTrailingLoopTblKeyword_4_1_0_0 = (Keyword)cThroughTrailingLoopAlternatives_4_1_0.eContents().get(0);
		private final Keyword cThroughTrailingLoopTtlKeyword_4_1_0_1 = (Keyword)cThroughTrailingLoopAlternatives_4_1_0.eContents().get(1);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cWithKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cYarnRefAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cYarnRefIDTerminalRuleCall_5_1_0 = (RuleCall)cYarnRefAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cToKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cRepeatAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cRepeatRepeatSpecParserRuleCall_6_1_0 = (RuleCall)cRepeatAssignment_6_1.eContents().get(0);
		
		//Knit:
		//	("K" | "k" | "Knit" | "knit") {Knit} number=INT? ("st" | "sts")? (together?="tog"? & throughTrailingLoop?=("tbl" |
		//	"ttl")?) ("with" yarnRef=ID)? ("to"? repeat=RepeatSpec)?;
		public ParserRule getRule() { return rule; }

		//("K" | "k" | "Knit" | "knit") {Knit} number=INT? ("st" | "sts")? (together?="tog"? & throughTrailingLoop?=("tbl" |
		//"ttl")?) ("with" yarnRef=ID)? ("to"? repeat=RepeatSpec)?
		public Group getGroup() { return cGroup; }

		//"K" | "k" | "Knit" | "knit"
		public Alternatives getAlternatives_0() { return cAlternatives_0; }

		//"K"
		public Keyword getKKeyword_0_0() { return cKKeyword_0_0; }

		//"k"
		public Keyword getKKeyword_0_1() { return cKKeyword_0_1; }

		//"Knit"
		public Keyword getKnitKeyword_0_2() { return cKnitKeyword_0_2; }

		//"knit"
		public Keyword getKnitKeyword_0_3() { return cKnitKeyword_0_3; }

		//{Knit}
		public Action getKnitAction_1() { return cKnitAction_1; }

		//number=INT?
		public Assignment getNumberAssignment_2() { return cNumberAssignment_2; }

		//INT
		public RuleCall getNumberINTTerminalRuleCall_2_0() { return cNumberINTTerminalRuleCall_2_0; }

		//("st" | "sts")?
		public Alternatives getAlternatives_3() { return cAlternatives_3; }

		//"st"
		public Keyword getStKeyword_3_0() { return cStKeyword_3_0; }

		//"sts"
		public Keyword getStsKeyword_3_1() { return cStsKeyword_3_1; }

		//together?="tog"? & throughTrailingLoop?=("tbl" | "ttl")?
		public UnorderedGroup getUnorderedGroup_4() { return cUnorderedGroup_4; }

		//together?="tog"?
		public Assignment getTogetherAssignment_4_0() { return cTogetherAssignment_4_0; }

		//"tog"
		public Keyword getTogetherTogKeyword_4_0_0() { return cTogetherTogKeyword_4_0_0; }

		//throughTrailingLoop?=("tbl" | "ttl")?
		public Assignment getThroughTrailingLoopAssignment_4_1() { return cThroughTrailingLoopAssignment_4_1; }

		//"tbl" | "ttl"
		public Alternatives getThroughTrailingLoopAlternatives_4_1_0() { return cThroughTrailingLoopAlternatives_4_1_0; }

		//"tbl"
		public Keyword getThroughTrailingLoopTblKeyword_4_1_0_0() { return cThroughTrailingLoopTblKeyword_4_1_0_0; }

		//"ttl"
		public Keyword getThroughTrailingLoopTtlKeyword_4_1_0_1() { return cThroughTrailingLoopTtlKeyword_4_1_0_1; }

		//("with" yarnRef=ID)?
		public Group getGroup_5() { return cGroup_5; }

		//"with"
		public Keyword getWithKeyword_5_0() { return cWithKeyword_5_0; }

		//yarnRef=ID
		public Assignment getYarnRefAssignment_5_1() { return cYarnRefAssignment_5_1; }

		//ID
		public RuleCall getYarnRefIDTerminalRuleCall_5_1_0() { return cYarnRefIDTerminalRuleCall_5_1_0; }

		//("to"? repeat=RepeatSpec)?
		public Group getGroup_6() { return cGroup_6; }

		//"to"?
		public Keyword getToKeyword_6_0() { return cToKeyword_6_0; }

		//repeat=RepeatSpec
		public Assignment getRepeatAssignment_6_1() { return cRepeatAssignment_6_1; }

		//RepeatSpec
		public RuleCall getRepeatRepeatSpecParserRuleCall_6_1_0() { return cRepeatRepeatSpecParserRuleCall_6_1_0; }
	}

	public class PurlElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Purl");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Alternatives cAlternatives_0 = (Alternatives)cGroup.eContents().get(0);
		private final Keyword cPKeyword_0_0 = (Keyword)cAlternatives_0.eContents().get(0);
		private final Keyword cPKeyword_0_1 = (Keyword)cAlternatives_0.eContents().get(1);
		private final Keyword cPurlKeyword_0_2 = (Keyword)cAlternatives_0.eContents().get(2);
		private final Keyword cPurlKeyword_0_3 = (Keyword)cAlternatives_0.eContents().get(3);
		private final Action cPurlAction_1 = (Action)cGroup.eContents().get(1);
		private final Assignment cNumberAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNumberINTTerminalRuleCall_2_0 = (RuleCall)cNumberAssignment_2.eContents().get(0);
		private final Alternatives cAlternatives_3 = (Alternatives)cGroup.eContents().get(3);
		private final Keyword cStKeyword_3_0 = (Keyword)cAlternatives_3.eContents().get(0);
		private final Keyword cStsKeyword_3_1 = (Keyword)cAlternatives_3.eContents().get(1);
		private final UnorderedGroup cUnorderedGroup_4 = (UnorderedGroup)cGroup.eContents().get(4);
		private final Assignment cTogetherAssignment_4_0 = (Assignment)cUnorderedGroup_4.eContents().get(0);
		private final Keyword cTogetherTogKeyword_4_0_0 = (Keyword)cTogetherAssignment_4_0.eContents().get(0);
		private final Assignment cThroughTrailingLoopAssignment_4_1 = (Assignment)cUnorderedGroup_4.eContents().get(1);
		private final Alternatives cThroughTrailingLoopAlternatives_4_1_0 = (Alternatives)cThroughTrailingLoopAssignment_4_1.eContents().get(0);
		private final Keyword cThroughTrailingLoopTblKeyword_4_1_0_0 = (Keyword)cThroughTrailingLoopAlternatives_4_1_0.eContents().get(0);
		private final Keyword cThroughTrailingLoopTtlKeyword_4_1_0_1 = (Keyword)cThroughTrailingLoopAlternatives_4_1_0.eContents().get(1);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cWithKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cYarnRefAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cYarnRefIDTerminalRuleCall_5_1_0 = (RuleCall)cYarnRefAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cToKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cRepeatAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cRepeatRepeatSpecParserRuleCall_6_1_0 = (RuleCall)cRepeatAssignment_6_1.eContents().get(0);
		
		//Purl:
		//	("P" | "p" | "Purl" | "purl") {Purl} number=INT? ("st" | "sts")? (together?="tog"? & throughTrailingLoop?=("tbl" |
		//	"ttl")?) ("with" yarnRef=ID)? ("to"? repeat=RepeatSpec)?;
		public ParserRule getRule() { return rule; }

		//("P" | "p" | "Purl" | "purl") {Purl} number=INT? ("st" | "sts")? (together?="tog"? & throughTrailingLoop?=("tbl" |
		//"ttl")?) ("with" yarnRef=ID)? ("to"? repeat=RepeatSpec)?
		public Group getGroup() { return cGroup; }

		//"P" | "p" | "Purl" | "purl"
		public Alternatives getAlternatives_0() { return cAlternatives_0; }

		//"P"
		public Keyword getPKeyword_0_0() { return cPKeyword_0_0; }

		//"p"
		public Keyword getPKeyword_0_1() { return cPKeyword_0_1; }

		//"Purl"
		public Keyword getPurlKeyword_0_2() { return cPurlKeyword_0_2; }

		//"purl"
		public Keyword getPurlKeyword_0_3() { return cPurlKeyword_0_3; }

		//{Purl}
		public Action getPurlAction_1() { return cPurlAction_1; }

		//number=INT?
		public Assignment getNumberAssignment_2() { return cNumberAssignment_2; }

		//INT
		public RuleCall getNumberINTTerminalRuleCall_2_0() { return cNumberINTTerminalRuleCall_2_0; }

		//("st" | "sts")?
		public Alternatives getAlternatives_3() { return cAlternatives_3; }

		//"st"
		public Keyword getStKeyword_3_0() { return cStKeyword_3_0; }

		//"sts"
		public Keyword getStsKeyword_3_1() { return cStsKeyword_3_1; }

		//together?="tog"? & throughTrailingLoop?=("tbl" | "ttl")?
		public UnorderedGroup getUnorderedGroup_4() { return cUnorderedGroup_4; }

		//together?="tog"?
		public Assignment getTogetherAssignment_4_0() { return cTogetherAssignment_4_0; }

		//"tog"
		public Keyword getTogetherTogKeyword_4_0_0() { return cTogetherTogKeyword_4_0_0; }

		//throughTrailingLoop?=("tbl" | "ttl")?
		public Assignment getThroughTrailingLoopAssignment_4_1() { return cThroughTrailingLoopAssignment_4_1; }

		//"tbl" | "ttl"
		public Alternatives getThroughTrailingLoopAlternatives_4_1_0() { return cThroughTrailingLoopAlternatives_4_1_0; }

		//"tbl"
		public Keyword getThroughTrailingLoopTblKeyword_4_1_0_0() { return cThroughTrailingLoopTblKeyword_4_1_0_0; }

		//"ttl"
		public Keyword getThroughTrailingLoopTtlKeyword_4_1_0_1() { return cThroughTrailingLoopTtlKeyword_4_1_0_1; }

		//("with" yarnRef=ID)?
		public Group getGroup_5() { return cGroup_5; }

		//"with"
		public Keyword getWithKeyword_5_0() { return cWithKeyword_5_0; }

		//yarnRef=ID
		public Assignment getYarnRefAssignment_5_1() { return cYarnRefAssignment_5_1; }

		//ID
		public RuleCall getYarnRefIDTerminalRuleCall_5_1_0() { return cYarnRefIDTerminalRuleCall_5_1_0; }

		//("to"? repeat=RepeatSpec)?
		public Group getGroup_6() { return cGroup_6; }

		//"to"?
		public Keyword getToKeyword_6_0() { return cToKeyword_6_0; }

		//repeat=RepeatSpec
		public Assignment getRepeatAssignment_6_1() { return cRepeatAssignment_6_1; }

		//RepeatSpec
		public RuleCall getRepeatRepeatSpecParserRuleCall_6_1_0() { return cRepeatRepeatSpecParserRuleCall_6_1_0; }
	}

	public class SlipElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Slip");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cSlipAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cReverseAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Alternatives cReverseAlternatives_1_0 = (Alternatives)cReverseAssignment_1.eContents().get(0);
		private final Keyword cReverseRevKeyword_1_0_0 = (Keyword)cReverseAlternatives_1_0.eContents().get(0);
		private final Keyword cReverseReverseKeyword_1_0_1 = (Keyword)cReverseAlternatives_1_0.eContents().get(1);
		private final Keyword cReverseRevKeyword_1_0_2 = (Keyword)cReverseAlternatives_1_0.eContents().get(2);
		private final Keyword cReverseReverseKeyword_1_0_3 = (Keyword)cReverseAlternatives_1_0.eContents().get(3);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Keyword cSlKeyword_2_0 = (Keyword)cAlternatives_2.eContents().get(0);
		private final Keyword cSlKeyword_2_1 = (Keyword)cAlternatives_2.eContents().get(1);
		private final Keyword cSlipKeyword_2_2 = (Keyword)cAlternatives_2.eContents().get(2);
		private final Keyword cSlipKeyword_2_3 = (Keyword)cAlternatives_2.eContents().get(3);
		private final Alternatives cAlternatives_3 = (Alternatives)cGroup.eContents().get(3);
		private final Group cGroup_3_0 = (Group)cAlternatives_3.eContents().get(0);
		private final Assignment cNumberAssignment_3_0_0 = (Assignment)cGroup_3_0.eContents().get(0);
		private final RuleCall cNumberINTTerminalRuleCall_3_0_0_0 = (RuleCall)cNumberAssignment_3_0_0.eContents().get(0);
		private final Alternatives cAlternatives_3_0_1 = (Alternatives)cGroup_3_0.eContents().get(1);
		private final Keyword cStKeyword_3_0_1_0 = (Keyword)cAlternatives_3_0_1.eContents().get(0);
		private final Keyword cStsKeyword_3_0_1_1 = (Keyword)cAlternatives_3_0_1.eContents().get(1);
		private final Keyword cNextStKeyword_3_1 = (Keyword)cAlternatives_3.eContents().get(1);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final Assignment cKnitwiseAssignment_4_0 = (Assignment)cAlternatives_4.eContents().get(0);
		private final Alternatives cKnitwiseAlternatives_4_0_0 = (Alternatives)cKnitwiseAssignment_4_0.eContents().get(0);
		private final Keyword cKnitwiseKwKeyword_4_0_0_0 = (Keyword)cKnitwiseAlternatives_4_0_0.eContents().get(0);
		private final Keyword cKnitwiseKnitwiseKeyword_4_0_0_1 = (Keyword)cKnitwiseAlternatives_4_0_0.eContents().get(1);
		private final Assignment cPurlwiseAssignment_4_1 = (Assignment)cAlternatives_4.eContents().get(1);
		private final Alternatives cPurlwiseAlternatives_4_1_0 = (Alternatives)cPurlwiseAssignment_4_1.eContents().get(0);
		private final Keyword cPurlwisePwKeyword_4_1_0_0 = (Keyword)cPurlwiseAlternatives_4_1_0.eContents().get(0);
		private final Keyword cPurlwisePurlwiseKeyword_4_1_0_1 = (Keyword)cPurlwiseAlternatives_4_1_0.eContents().get(1);
		private final Assignment cYarnPositionAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final Alternatives cYarnPositionAlternatives_5_0 = (Alternatives)cYarnPositionAssignment_5.eContents().get(0);
		private final Keyword cYarnPositionWyifKeyword_5_0_0 = (Keyword)cYarnPositionAlternatives_5_0.eContents().get(0);
		private final Keyword cYarnPositionWyibKeyword_5_0_1 = (Keyword)cYarnPositionAlternatives_5_0.eContents().get(1);
		
		//Slip:
		//	{Slip} reverse?=("Rev" | "Reverse" | "rev" | "reverse")? ("Sl" | "sl" | "Slip" | "slip") (number=INT ("st" | "sts")? |
		//	"next st")? (knitwise?=("kw" | "knitwise") | purlwise?=("pw" | "purlwise"))? yarnPosition=("wyif" | "wyib")?;
		public ParserRule getRule() { return rule; }

		//{Slip} reverse?=("Rev" | "Reverse" | "rev" | "reverse")? ("Sl" | "sl" | "Slip" | "slip") (number=INT ("st" | "sts")? |
		//"next st")? (knitwise?=("kw" | "knitwise") | purlwise?=("pw" | "purlwise"))? yarnPosition=("wyif" | "wyib")?
		public Group getGroup() { return cGroup; }

		//{Slip}
		public Action getSlipAction_0() { return cSlipAction_0; }

		//reverse?=("Rev" | "Reverse" | "rev" | "reverse")?
		public Assignment getReverseAssignment_1() { return cReverseAssignment_1; }

		//"Rev" | "Reverse" | "rev" | "reverse"
		public Alternatives getReverseAlternatives_1_0() { return cReverseAlternatives_1_0; }

		//"Rev"
		public Keyword getReverseRevKeyword_1_0_0() { return cReverseRevKeyword_1_0_0; }

		//"Reverse"
		public Keyword getReverseReverseKeyword_1_0_1() { return cReverseReverseKeyword_1_0_1; }

		//"rev"
		public Keyword getReverseRevKeyword_1_0_2() { return cReverseRevKeyword_1_0_2; }

		//"reverse"
		public Keyword getReverseReverseKeyword_1_0_3() { return cReverseReverseKeyword_1_0_3; }

		//"Sl" | "sl" | "Slip" | "slip"
		public Alternatives getAlternatives_2() { return cAlternatives_2; }

		//"Sl"
		public Keyword getSlKeyword_2_0() { return cSlKeyword_2_0; }

		//"sl"
		public Keyword getSlKeyword_2_1() { return cSlKeyword_2_1; }

		//"Slip"
		public Keyword getSlipKeyword_2_2() { return cSlipKeyword_2_2; }

		//"slip"
		public Keyword getSlipKeyword_2_3() { return cSlipKeyword_2_3; }

		//(number=INT ("st" | "sts")? | "next st")?
		public Alternatives getAlternatives_3() { return cAlternatives_3; }

		//number=INT ("st" | "sts")?
		public Group getGroup_3_0() { return cGroup_3_0; }

		//number=INT
		public Assignment getNumberAssignment_3_0_0() { return cNumberAssignment_3_0_0; }

		//INT
		public RuleCall getNumberINTTerminalRuleCall_3_0_0_0() { return cNumberINTTerminalRuleCall_3_0_0_0; }

		//("st" | "sts")?
		public Alternatives getAlternatives_3_0_1() { return cAlternatives_3_0_1; }

		//"st"
		public Keyword getStKeyword_3_0_1_0() { return cStKeyword_3_0_1_0; }

		//"sts"
		public Keyword getStsKeyword_3_0_1_1() { return cStsKeyword_3_0_1_1; }

		//"next st"
		public Keyword getNextStKeyword_3_1() { return cNextStKeyword_3_1; }

		//(knitwise?=("kw" | "knitwise") | purlwise?=("pw" | "purlwise"))?
		public Alternatives getAlternatives_4() { return cAlternatives_4; }

		//knitwise?=("kw" | "knitwise")
		public Assignment getKnitwiseAssignment_4_0() { return cKnitwiseAssignment_4_0; }

		//"kw" | "knitwise"
		public Alternatives getKnitwiseAlternatives_4_0_0() { return cKnitwiseAlternatives_4_0_0; }

		//"kw"
		public Keyword getKnitwiseKwKeyword_4_0_0_0() { return cKnitwiseKwKeyword_4_0_0_0; }

		//"knitwise"
		public Keyword getKnitwiseKnitwiseKeyword_4_0_0_1() { return cKnitwiseKnitwiseKeyword_4_0_0_1; }

		//purlwise?=("pw" | "purlwise")
		public Assignment getPurlwiseAssignment_4_1() { return cPurlwiseAssignment_4_1; }

		//"pw" | "purlwise"
		public Alternatives getPurlwiseAlternatives_4_1_0() { return cPurlwiseAlternatives_4_1_0; }

		//"pw"
		public Keyword getPurlwisePwKeyword_4_1_0_0() { return cPurlwisePwKeyword_4_1_0_0; }

		//"purlwise"
		public Keyword getPurlwisePurlwiseKeyword_4_1_0_1() { return cPurlwisePurlwiseKeyword_4_1_0_1; }

		//yarnPosition=("wyif" | "wyib")?
		public Assignment getYarnPositionAssignment_5() { return cYarnPositionAssignment_5; }

		//"wyif" | "wyib"
		public Alternatives getYarnPositionAlternatives_5_0() { return cYarnPositionAlternatives_5_0; }

		//"wyif"
		public Keyword getYarnPositionWyifKeyword_5_0_0() { return cYarnPositionWyifKeyword_5_0_0; }

		//"wyib"
		public Keyword getYarnPositionWyibKeyword_5_0_1() { return cYarnPositionWyibKeyword_5_0_1; }
	}

	public class RepeatSpecElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "RepeatSpec");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cToEndAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final Keyword cToEndEndKeyword_0_0 = (Keyword)cToEndAssignment_0.eContents().get(0);
		private final Assignment cToMarkerAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final Keyword cToMarkerMarkerKeyword_1_0 = (Keyword)cToMarkerAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cAlternatives.eContents().get(2);
		private final Assignment cValueAssignment_2_0 = (Assignment)cGroup_2.eContents().get(0);
		private final RuleCall cValueINTTerminalRuleCall_2_0_0 = (RuleCall)cValueAssignment_2_0.eContents().get(0);
		private final Alternatives cAlternatives_2_1 = (Alternatives)cGroup_2.eContents().get(1);
		private final Keyword cStKeyword_2_1_0 = (Keyword)cAlternatives_2_1.eContents().get(0);
		private final Keyword cStsKeyword_2_1_1 = (Keyword)cAlternatives_2_1.eContents().get(1);
		private final Assignment cBeforeEndAssignment_2_2 = (Assignment)cGroup_2.eContents().get(2);
		private final Keyword cBeforeEndBeforeEndKeyword_2_2_0 = (Keyword)cBeforeEndAssignment_2_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cAlternatives.eContents().get(3);
		private final Assignment cValueAssignment_3_0 = (Assignment)cGroup_3.eContents().get(0);
		private final RuleCall cValueINTTerminalRuleCall_3_0_0 = (RuleCall)cValueAssignment_3_0.eContents().get(0);
		private final Alternatives cAlternatives_3_1 = (Alternatives)cGroup_3.eContents().get(1);
		private final Keyword cStKeyword_3_1_0 = (Keyword)cAlternatives_3_1.eContents().get(0);
		private final Keyword cStsKeyword_3_1_1 = (Keyword)cAlternatives_3_1.eContents().get(1);
		private final Assignment cBeforeGapAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final Keyword cBeforeGapBeforeGapKeyword_3_2_0 = (Keyword)cBeforeGapAssignment_3_2.eContents().get(0);
		private final Group cGroup_4 = (Group)cAlternatives.eContents().get(4);
		private final Assignment cValueAssignment_4_0 = (Assignment)cGroup_4.eContents().get(0);
		private final RuleCall cValueINTTerminalRuleCall_4_0_0 = (RuleCall)cValueAssignment_4_0.eContents().get(0);
		private final Alternatives cAlternatives_4_1 = (Alternatives)cGroup_4.eContents().get(1);
		private final Keyword cStKeyword_4_1_0 = (Keyword)cAlternatives_4_1.eContents().get(0);
		private final Keyword cStsKeyword_4_1_1 = (Keyword)cAlternatives_4_1.eContents().get(1);
		private final Assignment cBeforeMarkerAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final Keyword cBeforeMarkerBeforeMarkerKeyword_4_2_0 = (Keyword)cBeforeMarkerAssignment_4_2.eContents().get(0);
		private final Group cGroup_5 = (Group)cAlternatives.eContents().get(5);
		private final Assignment cValueAssignment_5_0 = (Assignment)cGroup_5.eContents().get(0);
		private final RuleCall cValueINTTerminalRuleCall_5_0_0 = (RuleCall)cValueAssignment_5_0.eContents().get(0);
		private final Assignment cTimesAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final Keyword cTimesTimesKeyword_5_1_0 = (Keyword)cTimesAssignment_5_1.eContents().get(0);
		
		//RepeatSpec:
		//	toEnd?="end" | toMarker?="marker" | value=INT ("st" | "sts")? beforeEnd?="before end" | value=INT ("st" | "sts")?
		//	beforeGap?="before gap" | value=INT ("st" | "sts")? beforeMarker?="before marker" | value=INT times?="times";
		public ParserRule getRule() { return rule; }

		//toEnd?="end" | toMarker?="marker" | value=INT ("st" | "sts")? beforeEnd?="before end" | value=INT ("st" | "sts")?
		//beforeGap?="before gap" | value=INT ("st" | "sts")? beforeMarker?="before marker" | value=INT times?="times"
		public Alternatives getAlternatives() { return cAlternatives; }

		//toEnd?="end"
		public Assignment getToEndAssignment_0() { return cToEndAssignment_0; }

		//"end"
		public Keyword getToEndEndKeyword_0_0() { return cToEndEndKeyword_0_0; }

		//toMarker?="marker"
		public Assignment getToMarkerAssignment_1() { return cToMarkerAssignment_1; }

		//"marker"
		public Keyword getToMarkerMarkerKeyword_1_0() { return cToMarkerMarkerKeyword_1_0; }

		//value=INT ("st" | "sts")? beforeEnd?="before end"
		public Group getGroup_2() { return cGroup_2; }

		//value=INT
		public Assignment getValueAssignment_2_0() { return cValueAssignment_2_0; }

		//INT
		public RuleCall getValueINTTerminalRuleCall_2_0_0() { return cValueINTTerminalRuleCall_2_0_0; }

		//("st" | "sts")?
		public Alternatives getAlternatives_2_1() { return cAlternatives_2_1; }

		//"st"
		public Keyword getStKeyword_2_1_0() { return cStKeyword_2_1_0; }

		//"sts"
		public Keyword getStsKeyword_2_1_1() { return cStsKeyword_2_1_1; }

		//beforeEnd?="before end"
		public Assignment getBeforeEndAssignment_2_2() { return cBeforeEndAssignment_2_2; }

		//"before end"
		public Keyword getBeforeEndBeforeEndKeyword_2_2_0() { return cBeforeEndBeforeEndKeyword_2_2_0; }

		//value=INT ("st" | "sts")? beforeGap?="before gap"
		public Group getGroup_3() { return cGroup_3; }

		//value=INT
		public Assignment getValueAssignment_3_0() { return cValueAssignment_3_0; }

		//INT
		public RuleCall getValueINTTerminalRuleCall_3_0_0() { return cValueINTTerminalRuleCall_3_0_0; }

		//("st" | "sts")?
		public Alternatives getAlternatives_3_1() { return cAlternatives_3_1; }

		//"st"
		public Keyword getStKeyword_3_1_0() { return cStKeyword_3_1_0; }

		//"sts"
		public Keyword getStsKeyword_3_1_1() { return cStsKeyword_3_1_1; }

		//beforeGap?="before gap"
		public Assignment getBeforeGapAssignment_3_2() { return cBeforeGapAssignment_3_2; }

		//"before gap"
		public Keyword getBeforeGapBeforeGapKeyword_3_2_0() { return cBeforeGapBeforeGapKeyword_3_2_0; }

		//value=INT ("st" | "sts")? beforeMarker?="before marker"
		public Group getGroup_4() { return cGroup_4; }

		//value=INT
		public Assignment getValueAssignment_4_0() { return cValueAssignment_4_0; }

		//INT
		public RuleCall getValueINTTerminalRuleCall_4_0_0() { return cValueINTTerminalRuleCall_4_0_0; }

		//("st" | "sts")?
		public Alternatives getAlternatives_4_1() { return cAlternatives_4_1; }

		//"st"
		public Keyword getStKeyword_4_1_0() { return cStKeyword_4_1_0; }

		//"sts"
		public Keyword getStsKeyword_4_1_1() { return cStsKeyword_4_1_1; }

		//beforeMarker?="before marker"
		public Assignment getBeforeMarkerAssignment_4_2() { return cBeforeMarkerAssignment_4_2; }

		//"before marker"
		public Keyword getBeforeMarkerBeforeMarkerKeyword_4_2_0() { return cBeforeMarkerBeforeMarkerKeyword_4_2_0; }

		//value=INT times?="times"
		public Group getGroup_5() { return cGroup_5; }

		//value=INT
		public Assignment getValueAssignment_5_0() { return cValueAssignment_5_0; }

		//INT
		public RuleCall getValueINTTerminalRuleCall_5_0_0() { return cValueINTTerminalRuleCall_5_0_0; }

		//times?="times"
		public Assignment getTimesAssignment_5_1() { return cTimesAssignment_5_1; }

		//"times"
		public Keyword getTimesTimesKeyword_5_1_0() { return cTimesTimesKeyword_5_1_0; }
	}

	public class RepeatElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Repeat");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Alternatives cAlternatives_0_0 = (Alternatives)cGroup_0.eContents().get(0);
		private final Keyword cRepeatKeyword_0_0_0 = (Keyword)cAlternatives_0_0.eContents().get(0);
		private final Keyword cRepeatKeyword_0_0_1 = (Keyword)cAlternatives_0_0.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Assignment cOperationsAssignment_0_2 = (Assignment)cGroup_0.eContents().get(2);
		private final RuleCall cOperationsInlineOperationParserRuleCall_0_2_0 = (RuleCall)cOperationsAssignment_0_2.eContents().get(0);
		private final Group cGroup_0_3 = (Group)cGroup_0.eContents().get(3);
		private final Keyword cCommaKeyword_0_3_0 = (Keyword)cGroup_0_3.eContents().get(0);
		private final Assignment cOperationsAssignment_0_3_1 = (Assignment)cGroup_0_3.eContents().get(1);
		private final RuleCall cOperationsInlineOperationParserRuleCall_0_3_1_0 = (RuleCall)cOperationsAssignment_0_3_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_0_4 = (Keyword)cGroup_0.eContents().get(4);
		private final Keyword cToKeyword_0_5 = (Keyword)cGroup_0.eContents().get(5);
		private final Assignment cSpecAssignment_0_6 = (Assignment)cGroup_0.eContents().get(6);
		private final RuleCall cSpecRepeatSpecParserRuleCall_0_6_0 = (RuleCall)cSpecAssignment_0_6.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cOperationsAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cOperationsInlineOperationParserRuleCall_1_1_0 = (RuleCall)cOperationsAssignment_1_1.eContents().get(0);
		private final Group cGroup_1_2 = (Group)cGroup_1.eContents().get(2);
		private final Keyword cCommaKeyword_1_2_0 = (Keyword)cGroup_1_2.eContents().get(0);
		private final Assignment cOperationsAssignment_1_2_1 = (Assignment)cGroup_1_2.eContents().get(1);
		private final RuleCall cOperationsInlineOperationParserRuleCall_1_2_1_0 = (RuleCall)cOperationsAssignment_1_2_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_1_3 = (Keyword)cGroup_1.eContents().get(3);
		private final Group cGroup_1_4 = (Group)cGroup_1.eContents().get(4);
		private final Keyword cCommaKeyword_1_4_0 = (Keyword)cGroup_1_4.eContents().get(0);
		private final Alternatives cAlternatives_1_4_1 = (Alternatives)cGroup_1_4.eContents().get(1);
		private final Keyword cRepeatKeyword_1_4_1_0 = (Keyword)cAlternatives_1_4_1.eContents().get(0);
		private final Keyword cRepeatKeyword_1_4_1_1 = (Keyword)cAlternatives_1_4_1.eContents().get(1);
		private final Keyword cToKeyword_1_5 = (Keyword)cGroup_1.eContents().get(5);
		private final Assignment cSpecAssignment_1_6 = (Assignment)cGroup_1.eContents().get(6);
		private final RuleCall cSpecRepeatSpecParserRuleCall_1_6_0 = (RuleCall)cSpecAssignment_1_6.eContents().get(0);
		
		//Repeat:
		//	("Repeat" | "repeat") "[" operations+=InlineOperation ("," operations+=InlineOperation)* "]" "to"? spec=RepeatSpec |
		//	"[" operations+=InlineOperation ("," operations+=InlineOperation)* "]" ("," ("Repeat" | "repeat"))? "to"?
		//	spec=RepeatSpec;
		public ParserRule getRule() { return rule; }

		//("Repeat" | "repeat") "[" operations+=InlineOperation ("," operations+=InlineOperation)* "]" "to"? spec=RepeatSpec | "["
		//operations+=InlineOperation ("," operations+=InlineOperation)* "]" ("," ("Repeat" | "repeat"))? "to"? spec=RepeatSpec
		public Alternatives getAlternatives() { return cAlternatives; }

		//("Repeat" | "repeat") "[" operations+=InlineOperation ("," operations+=InlineOperation)* "]" "to"? spec=RepeatSpec
		public Group getGroup_0() { return cGroup_0; }

		//"Repeat" | "repeat"
		public Alternatives getAlternatives_0_0() { return cAlternatives_0_0; }

		//"Repeat"
		public Keyword getRepeatKeyword_0_0_0() { return cRepeatKeyword_0_0_0; }

		//"repeat"
		public Keyword getRepeatKeyword_0_0_1() { return cRepeatKeyword_0_0_1; }

		//"["
		public Keyword getLeftSquareBracketKeyword_0_1() { return cLeftSquareBracketKeyword_0_1; }

		//operations+=InlineOperation
		public Assignment getOperationsAssignment_0_2() { return cOperationsAssignment_0_2; }

		//InlineOperation
		public RuleCall getOperationsInlineOperationParserRuleCall_0_2_0() { return cOperationsInlineOperationParserRuleCall_0_2_0; }

		//("," operations+=InlineOperation)*
		public Group getGroup_0_3() { return cGroup_0_3; }

		//","
		public Keyword getCommaKeyword_0_3_0() { return cCommaKeyword_0_3_0; }

		//operations+=InlineOperation
		public Assignment getOperationsAssignment_0_3_1() { return cOperationsAssignment_0_3_1; }

		//InlineOperation
		public RuleCall getOperationsInlineOperationParserRuleCall_0_3_1_0() { return cOperationsInlineOperationParserRuleCall_0_3_1_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_0_4() { return cRightSquareBracketKeyword_0_4; }

		//"to"?
		public Keyword getToKeyword_0_5() { return cToKeyword_0_5; }

		//spec=RepeatSpec
		public Assignment getSpecAssignment_0_6() { return cSpecAssignment_0_6; }

		//RepeatSpec
		public RuleCall getSpecRepeatSpecParserRuleCall_0_6_0() { return cSpecRepeatSpecParserRuleCall_0_6_0; }

		//"[" operations+=InlineOperation ("," operations+=InlineOperation)* "]" ("," ("Repeat" | "repeat"))? "to"?
		//spec=RepeatSpec
		public Group getGroup_1() { return cGroup_1; }

		//"["
		public Keyword getLeftSquareBracketKeyword_1_0() { return cLeftSquareBracketKeyword_1_0; }

		//operations+=InlineOperation
		public Assignment getOperationsAssignment_1_1() { return cOperationsAssignment_1_1; }

		//InlineOperation
		public RuleCall getOperationsInlineOperationParserRuleCall_1_1_0() { return cOperationsInlineOperationParserRuleCall_1_1_0; }

		//("," operations+=InlineOperation)*
		public Group getGroup_1_2() { return cGroup_1_2; }

		//","
		public Keyword getCommaKeyword_1_2_0() { return cCommaKeyword_1_2_0; }

		//operations+=InlineOperation
		public Assignment getOperationsAssignment_1_2_1() { return cOperationsAssignment_1_2_1; }

		//InlineOperation
		public RuleCall getOperationsInlineOperationParserRuleCall_1_2_1_0() { return cOperationsInlineOperationParserRuleCall_1_2_1_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_1_3() { return cRightSquareBracketKeyword_1_3; }

		//("," ("Repeat" | "repeat"))?
		public Group getGroup_1_4() { return cGroup_1_4; }

		//","
		public Keyword getCommaKeyword_1_4_0() { return cCommaKeyword_1_4_0; }

		//"Repeat" | "repeat"
		public Alternatives getAlternatives_1_4_1() { return cAlternatives_1_4_1; }

		//"Repeat"
		public Keyword getRepeatKeyword_1_4_1_0() { return cRepeatKeyword_1_4_1_0; }

		//"repeat"
		public Keyword getRepeatKeyword_1_4_1_1() { return cRepeatKeyword_1_4_1_1; }

		//"to"?
		public Keyword getToKeyword_1_5() { return cToKeyword_1_5; }

		//spec=RepeatSpec
		public Assignment getSpecAssignment_1_6() { return cSpecAssignment_1_6; }

		//RepeatSpec
		public RuleCall getSpecRepeatSpecParserRuleCall_1_6_0() { return cSpecRepeatSpecParserRuleCall_1_6_0; }
	}

	public class RangeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Range");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cMinAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cMinINTTerminalRuleCall_0_0 = (RuleCall)cMinAssignment_0.eContents().get(0);
		private final Keyword cHyphenMinusKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cMaxAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cMaxINTTerminalRuleCall_2_0 = (RuleCall)cMaxAssignment_2.eContents().get(0);
		
		//// lower-level data types
		//Range:
		//	min=INT "-" max=INT;
		public ParserRule getRule() { return rule; }

		//min=INT "-" max=INT
		public Group getGroup() { return cGroup; }

		//min=INT
		public Assignment getMinAssignment_0() { return cMinAssignment_0; }

		//INT
		public RuleCall getMinINTTerminalRuleCall_0_0() { return cMinINTTerminalRuleCall_0_0; }

		//"-"
		public Keyword getHyphenMinusKeyword_1() { return cHyphenMinusKeyword_1; }

		//max=INT
		public Assignment getMaxAssignment_2() { return cMaxAssignment_2; }

		//INT
		public RuleCall getMaxINTTerminalRuleCall_2_0() { return cMaxINTTerminalRuleCall_2_0; }
	}
	
	
	private PatternElements pPattern;
	private BlockOperationElements pBlockOperation;
	private InstructionElements pInstruction;
	private RowElements pRow;
	private MessageElements pMessage;
	private InlineOperationElements pInlineOperation;
	private KnitElements pKnit;
	private PurlElements pPurl;
	private SlipElements pSlip;
	private RepeatSpecElements pRepeatSpec;
	private RepeatElements pRepeat;
	private RangeElements pRange;
	private TerminalRule tID;
	private TerminalRule tINT;
	private TerminalRule tSTRING;
	private TerminalRule tML_COMMENT;
	private TerminalRule tSL_COMMENT;
	private TerminalRule tLF;
	private TerminalRule tWS;
	private TerminalRule tANY_OTHER;
	
	private final GrammarProvider grammarProvider;

	@Inject
	public KnittingExpressionLanguageGrammarAccess(GrammarProvider grammarProvider) {
		this.grammarProvider = grammarProvider;
	}
	
	public Grammar getGrammar() {	
		return grammarProvider.getGrammar(this);
	}
	

	
	//Pattern:
	//	LF* elements+=BlockOperation+ LF*;
	public PatternElements getPatternAccess() {
		return (pPattern != null) ? pPattern : (pPattern = new PatternElements());
	}
	
	public ParserRule getPatternRule() {
		return getPatternAccess().getRule();
	}

	//BlockOperation:
	//	Instruction | Row | Message;
	public BlockOperationElements getBlockOperationAccess() {
		return (pBlockOperation != null) ? pBlockOperation : (pBlockOperation = new BlockOperationElements());
	}
	
	public ParserRule getBlockOperationRule() {
		return getBlockOperationAccess().getRule();
	}

	//Instruction:
	//	"Instruction" label=ID? ("{" LF* rows+=Row+ "}" LF | ":" LF rows+=Row+ LF);
	public InstructionElements getInstructionAccess() {
		return (pInstruction != null) ? pInstruction : (pInstruction = new InstructionElements());
	}
	
	public ParserRule getInstructionRule() {
		return getInstructionAccess().getRule();
	}

	//Row:
	//	nextRow?="Next"? (shortRow?="Short"? & longRow?="Long"?) label=("Row" | "Round" | "Rows" | "Rounds") (range=Range |
	//	number+=INT ("," number+=INT)* ("and" "all"? subsequent=("even" | "odd") ("rows" | "rounds")?)?)? (side=("WS" | "RS")?
	//	& ("with" yarnRef=ID)?) ("(" (","? inform?="inform" "side"?)? (","? reset?="reset" "count"?)? ")")? ":" LF?
	//	operations+=InlineOperation ("," operations+=InlineOperation)* => LF?;
	public RowElements getRowAccess() {
		return (pRow != null) ? pRow : (pRow = new RowElements());
	}
	
	public ParserRule getRowRule() {
		return getRowAccess().getRule();
	}

	//Message:
	//	message=STRING LF;
	public MessageElements getMessageAccess() {
		return (pMessage != null) ? pMessage : (pMessage = new MessageElements());
	}
	
	public ParserRule getMessageRule() {
		return getMessageAccess().getRule();
	}

	//// Inline Operations
	//InlineOperation:
	//	Knit | Purl | Slip | Repeat;
	public InlineOperationElements getInlineOperationAccess() {
		return (pInlineOperation != null) ? pInlineOperation : (pInlineOperation = new InlineOperationElements());
	}
	
	public ParserRule getInlineOperationRule() {
		return getInlineOperationAccess().getRule();
	}

	//Knit:
	//	("K" | "k" | "Knit" | "knit") {Knit} number=INT? ("st" | "sts")? (together?="tog"? & throughTrailingLoop?=("tbl" |
	//	"ttl")?) ("with" yarnRef=ID)? ("to"? repeat=RepeatSpec)?;
	public KnitElements getKnitAccess() {
		return (pKnit != null) ? pKnit : (pKnit = new KnitElements());
	}
	
	public ParserRule getKnitRule() {
		return getKnitAccess().getRule();
	}

	//Purl:
	//	("P" | "p" | "Purl" | "purl") {Purl} number=INT? ("st" | "sts")? (together?="tog"? & throughTrailingLoop?=("tbl" |
	//	"ttl")?) ("with" yarnRef=ID)? ("to"? repeat=RepeatSpec)?;
	public PurlElements getPurlAccess() {
		return (pPurl != null) ? pPurl : (pPurl = new PurlElements());
	}
	
	public ParserRule getPurlRule() {
		return getPurlAccess().getRule();
	}

	//Slip:
	//	{Slip} reverse?=("Rev" | "Reverse" | "rev" | "reverse")? ("Sl" | "sl" | "Slip" | "slip") (number=INT ("st" | "sts")? |
	//	"next st")? (knitwise?=("kw" | "knitwise") | purlwise?=("pw" | "purlwise"))? yarnPosition=("wyif" | "wyib")?;
	public SlipElements getSlipAccess() {
		return (pSlip != null) ? pSlip : (pSlip = new SlipElements());
	}
	
	public ParserRule getSlipRule() {
		return getSlipAccess().getRule();
	}

	//RepeatSpec:
	//	toEnd?="end" | toMarker?="marker" | value=INT ("st" | "sts")? beforeEnd?="before end" | value=INT ("st" | "sts")?
	//	beforeGap?="before gap" | value=INT ("st" | "sts")? beforeMarker?="before marker" | value=INT times?="times";
	public RepeatSpecElements getRepeatSpecAccess() {
		return (pRepeatSpec != null) ? pRepeatSpec : (pRepeatSpec = new RepeatSpecElements());
	}
	
	public ParserRule getRepeatSpecRule() {
		return getRepeatSpecAccess().getRule();
	}

	//Repeat:
	//	("Repeat" | "repeat") "[" operations+=InlineOperation ("," operations+=InlineOperation)* "]" "to"? spec=RepeatSpec |
	//	"[" operations+=InlineOperation ("," operations+=InlineOperation)* "]" ("," ("Repeat" | "repeat"))? "to"?
	//	spec=RepeatSpec;
	public RepeatElements getRepeatAccess() {
		return (pRepeat != null) ? pRepeat : (pRepeat = new RepeatElements());
	}
	
	public ParserRule getRepeatRule() {
		return getRepeatAccess().getRule();
	}

	//// lower-level data types
	//Range:
	//	min=INT "-" max=INT;
	public RangeElements getRangeAccess() {
		return (pRange != null) ? pRange : (pRange = new RangeElements());
	}
	
	public ParserRule getRangeRule() {
		return getRangeAccess().getRule();
	}

	//// Terminals
	//terminal ID:
	//	"^"? ("a".."z" | "A".."Z")+;
	public TerminalRule getIDRule() {
		return (tID != null) ? tID : (tID = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "ID"));
	} 

	//terminal INT returns ecore::EIntegerObject:
	//	"0".."9"+;
	public TerminalRule getINTRule() {
		return (tINT != null) ? tINT : (tINT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "INT"));
	} 

	//terminal STRING:
	//	"\"" ("\\" ("b" | "t" | "n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\""))* "\"" | "\'" ("\\" ("b" | "t" |
	//	"n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return (tSTRING != null) ? tSTRING : (tSTRING = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "STRING"));
	} 

	//terminal ML_COMMENT:
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return (tML_COMMENT != null) ? tML_COMMENT : (tML_COMMENT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "ML_COMMENT"));
	} 

	//terminal SL_COMMENT:
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return (tSL_COMMENT != null) ? tSL_COMMENT : (tSL_COMMENT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "SL_COMMENT"));
	} 

	//terminal LF:
	//	EOF | "\r"? "\n";
	public TerminalRule getLFRule() {
		return (tLF != null) ? tLF : (tLF = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "LF"));
	} 

	//terminal WS:
	//	(" " | "\t")+;
	public TerminalRule getWSRule() {
		return (tWS != null) ? tWS : (tWS = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "WS"));
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return (tANY_OTHER != null) ? tANY_OTHER : (tANY_OTHER = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "ANY_OTHER"));
	} 
}
